# build
# ld: warning: -undefined dynamic_lookup may not work with chained fixups
# temporary solution: https://github.com/bazelbuild/bazel/issues/16413
# build --linkopt=-Wl,-no_fixup_chains
build --platforms=//src:macos_arm64_platform

###############################
#   test                      #
###############################

test --test_verbose_timeout_warnings 
test --verbose_failures
test --keep_going 
test --test_output=all

###############################
# sanitizer                   #
###############################

build:asan_ubsan --strip=never

# AddressSanitizer (ASan)
build:asan_ubsan --copt=-fsanitize=address
build:asan_ubsan --linkopt=-fsanitize=address

# UndefinedBehaviorSanitizer (UBSan)
build:asan_ubsan --copt=-fsanitize=undefined
build:asan_ubsan --linkopt=-fsanitize=undefined

# common flags for both ASan and UBSan
build:asan_ubsan --copt=-DASAN_UBSAN_ENABLED
build:asan_ubsan --copt=-fno-omit-frame-pointer
build:asan_ubsan --copt=-O1
build:asan_ubsan --copt=-g
build:asan_ubsan --copt=-Wno-macro-redefined ## Suppress warnings about redefined macros in ASan/UBSan headers
build:asan_ubsan --linkopt=-fno-omit-frame-pointer

# Enable ASan and UBSan for all targets
# build --config=asan_ubsan

# MSan and TSan are not supported on macOS/Clang.

###############################
#   Analyzer                  #
###############################

build:analyze --config=asan_ubsan
build:analyze --action_env=CC=clang
build:analyze --copt=-fno-omit-frame-pointer
build:analyze --run_under='scan-build --status-bugs'

# Enable the analyzer for all targets
# build --config=analyze


###############################
# Profile                     #
###############################

build --generate_json_trace_profile

###############################
# macOS SDK Version           #
###############################

# build --macos_sdk_version=15.1

###############################
# Output                      #
###############################

# A more useful default output mode for bazel query, which
# prints "ng_module rule //foo:bar" instead of just "//foo:bar".
query --output=label_kind

###############################
# Build Debug                 #
###############################

build --compilation_mode=dbg --spawn_strategy=local

###############################
# Coverage                  #
###############################

# # Use Clang as the compiler
coverage --collect_code_coverage
coverage --copt=-fprofile-instr-generate
coverage --copt=-fcoverage-mapping
coverage --linkopt=-fprofile-instr-generate
coverage --linkopt=-fcoverage-mapping
coverage --coverage_output_generator=@bazel_tools//tools/coverage:coverage_report_generator
coverage --instrumentation_filter=//src/...  