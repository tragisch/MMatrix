# This is a Bazel configuration file that sets up various build and test options.

###############################
# Debug & Analyze             #
###############################

# Debug & Analyze
build:debug --compilation_mode=dbg
build:debug --strip=never
build:debug --copt=-O0
build:debug --copt=-g
build:debug --copt=-fno-omit-frame-pointer
build:debug --copt=-Wno-macro-redefined
build:debug --linkopt=-fno-omit-frame-pointer
build:debug --define=DEBUG=1

# Optional: ASAN + UBSAN 
build:debug --copt=-fsanitize=address
build:debug --copt=-fsanitize=undefined
build:debug --linkopt=-fsanitize=address
build:debug --linkopt=-fsanitize=undefined

# Optional: Analyzer via scan-build
build:debug --run_under='scan-build --status-bugs'

# Profile:
build:debug --profile=profile.gz 
build:debug --generate_json_trace_profile
build:debug --noslim_profile

build:debug --sandbox_debug
build:debug --features=layering_check
build:debug --experimental_generate_json_trace_profile

# bazel build //... --config=debug

###############################
# Clang Report                #
###############################

build:debug_clang_report --compilation_mode=opt
build:debug_clang_report --strip=never
build:debug_clang_report --copt=-ftime-report
build:debug_clang_report --copt=-O2
build:debug_clang_report --copt=-Rpass=loop-vectorize
build:debug_clang_report --copt=-Rpass-missed=loop-vectorize

# bazel build //... --config=debug_clang_report

###############################
# Heap Dump Bazel             #
###############################

build --heap_dump_on_oom

###############################
# Benchmark                   #
###############################

build:benchmark --compilation_mode=opt
build:benchmark --strip=always
build:benchmark --define=NDEBUG=1
build:benchmark --output_filter=

# bazel build //... --config=benchmark

###############################
# Output                      #
###############################

# A more useful default output mode for bazel query, which
# prints "ng_module rule //foo:bar" instead of just "//foo:bar".
query --output=label_kind

###############################
# Test                      #
###############################

test --test_verbose_timeout_warnings 
test --verbose_failures
test --keep_going 
test --test_output=all

###############################
# Coverage                  #
###############################

coverage --collect_code_coverage
coverage --copt=-fprofile-instr-generate
coverage --copt=-fcoverage-mapping
coverage --linkopt=-fprofile-instr-generate
coverage --linkopt=-fcoverage-mapping
coverage --coverage_output_generator=@bazel_tools//tools/coverage:coverage_report_generator
coverage --instrumentation_filter=//src/...  