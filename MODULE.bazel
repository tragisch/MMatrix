"""
This module file is used to manage external dependencies using Bzlmod.
Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
For more details, please check https://github.com/bazelbuild/bazel/issues/18958
"""

###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

module(
    name = "mmatrix",
    version = "0.1.0",
)

bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "zlib", version = "1.3.1.bcr.4")
bazel_dep(name = "apple_support", version = "1.22.0")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "cgrindel_bazel_starlib", version = "0.25.0")
bazel_dep(name = "rules_shell", version = "0.4.0")
bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
bazel_dep(name = "google_benchmark", version = "1.9.2")

bazel_dep(name = "depend_on_what_you_use", version = "0.8.0")

#############################
# Hedron's Compile Commands Extractor for Bazel
#############################

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
)

#############################
# Check license of external dependencies
#############################

bazel_dep(name = "phst_license_test", version = "0", dev_dependency = True)
git_override(
    module_name = "phst_license_test",
    commit = "f135357cffb46e2b1120623e15eec7c88e7f34d4",
    remote = "https://github.com/phst/license_test.git",
)

#############################
# Load external non-Bazel libraries
#############################

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# unity - A simple unit testing library for C.
http_archive(
    name = "Unity",
    build_file = "@//:third_party/Unity.BUILD",
    sha256 = "4598298723ecca1f242b8c540a253ae4ab591f6810cbde72f128961007683034",
    strip_prefix = "Unity-2.5.2",
    urls = [
        "https://github.com/ThrowTheSwitch/Unity/archive/refs/tags/v2.5.2.zip",
    ],
)

# matio - A C library for reading and writing MATLAB MAT files.
http_archive(
    name = "matio",
    sha256 = "0a6aa00b18c4512b63a8d27906b079c8c6ed41d4b2844f7a4ae598e18d22d3b3",
    build_file = "@//:third_party/matio.BUILD",
    strip_prefix = "matio-1.5.27",
    urls = [
        "https://github.com/tbeu/matio/releases/download/v1.5.27/matio-1.5.27.tar.gz",
    ],
)

# csparse is a C library for sparse matrices.
git_repository(
    name = "csparse",
    remote = "https://github.com/ibayer/CSparse.git",
    commit = "c8d48ca8b1064ad38b220ea57e95249cf9f44e57",
    build_file = "@//:third_party/csparse.BUILD",
)

# dbg-macro: A simple debug macro for C.
git_repository(
    name = "dbg-macro",
    commit = "b949858d9dff4886e68f1049270aad1b3fa7ab81",
    remote = "https://github.com/eerimoq/dbg-macro.git",
    build_file = "@//:third_party/dbg-macro.BUILD",
)

git_repository(
    name = "pcg",
    commit = "83252d9c23df9c82ecb42210afed61a7b42402d7",
    remote = "https://github.com/imneme/pcg-c.git",
    build_file = "@//:third_party/pcg.BUILD",
)

git_repository(
    name = "openblas",
    commit = "02267d86f541fb82e3feae6647a0cbb4625f48df",  # 29.05.2025
    remote = "https://github.com/OpenMathLib/OpenBLAS.git",
    build_file = "@//:third_party/openblas.BUILD",
)

#############################
# Hombrew Local Libraries (MacOS)
#############################

# define new_local_repository rule for local installed non-Bazel libraries:
new_local_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:local.bzl", "new_local_repository")

# due to license issues in private lib folder.
new_local_repository(
    name = "hdf5",
    path = "lib/hdf5",
)

# libomp is a library that supports multi-platform shared memory multiprocessing programming in C, C++, and Fortran.
new_local_repository(
    name = "libomp",
    build_file = "@//:third_party/libomp.BUILD",
    path = "/opt/homebrew/opt/libomp",
)

# openblas is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.
# new_local_repository(
#     name = "openblas",
#     build_file = "@//:third_party/openblas.BUILD",
#     path = "/opt/homebrew/opt/openblas/",
# )

# suite-sparse is a collection of sparse matrix libraries
new_local_repository(
    name = "suitesparse",
    build_file = "@//:third_party/suitesparse.BUILD",
    path = "/opt/homebrew/opt/suite-sparse/",
)

#############################
# Hombrew Local Libraries (Linux) - activate on Linux only
#############################

# # define new_local_repository rule for local installed non-Bazel libraries:
# new_local_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:local.bzl", "new_local_repository")

# # libomp is a library that supports multi-platform shared memory multiprocessing programming in C, C++, and Fortran.
# new_local_repository(
#     name = "libomp",
#     build_file = "@//:third_party/libomp.BUILD",
#     path = "/home/linuxbrew/.linuxbrew/opt/libomp",
# )

# # openblas is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.
# new_local_repository(
#     name = "openblas",
#     build_file = "@//:third_party/openblas.BUILD",
#     path = "/home/linuxbrew/.linuxbrew/opt/openblas/",
# )

# # suite-sparse is a collection of sparse matrix libraries
# new_local_repository(
#     name = "suitesparse",
#     build_file = "@//:third_party/suitesparse.BUILD",
#     path = "/home/linuxbrew/.linuxbrew/opt/suite-sparse/",
# )
